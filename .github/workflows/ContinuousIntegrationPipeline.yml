name: Go CI/CD

# Trigger the workflow on push or pull request events to the main branch
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Define the jobs to run
jobs:
  build:
    
    # The OS and version to run the job on
    runs-on: ubuntu-latest

    # Define the sequence of steps to execute
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.18

    - name: Build the backend
      working-directory: ./backend
      run: go build 
      
    - name: Build the frontend
      working-directory: ./frontend
      run: go build 

  DockerBuild: 
    runs-on: ubuntu-latest
    needs: [build]  # Ensure DockerBuild runs after the build job

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend 
          dockerfile: ./frontend/Dockerfile 
          push: true
          tags: |
            dajoh22/frontend:latest
            
      - name: Build and push Docker image backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend 
          dockerfile: ./backend/Dockerfile 
          push: true
          tags: |
            dajoh22/backend:latest

  test:
    
    runs-on: ubuntu-latest
    needs: [DockerBuild]  # Ensure the test job runs after DockerBuild

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Pull frontend Docker image
      run: docker pull dajoh22/frontend:latest

    - name: Pull backend Docker image
      run: docker pull dajoh22/backend:latest

    - name: Run services with Docker Compose
      run: |
        docker compose up -d
        docker ps

    - name: Run tests
      working-directory: ./frontend
      run: go test 

    - name: Tear down Docker Compose
      if: always()
      run: docker compose down

  Deploy:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        run: echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f frontend-deployment.yml
          kubectl apply -f frontend-service.yml
          kubectl apply -f backend-deployment.yml
          kubectl apply -f backend-service.yml